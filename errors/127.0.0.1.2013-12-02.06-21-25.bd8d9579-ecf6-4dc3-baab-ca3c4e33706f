(dp1
S'output'
p2
S"<type 'exceptions.SyntaxError'> define_table argument is not a Field or Table: Filter Policies"
p3
sS'layer'
p4
S'/home/samfisher/iiith/Semester 2/web2py/applications/Project/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\n\n\ndef index():\n\tsession.compare=[]\n\tif auth.user:\n\t\tif auth.user.r_type==\'customer\':\n\t\t\tprint \'customer incoming\'\n\t\t\tredirect(URL(r=request,f=\'home\'))\n\t\telif auth.user.r_type==\'agent\':\n\t\t\tprint \'agent incoming\'\n\t\t\tredirect(URL(r=request,f=\'agent_home\'))\n\t\telif auth.user.r_type==\'manager\':\n\t\t\tprint \'manager incoming\'\n\t\t\tredirect(URL(r=request,f=\'manager_home\'))\n\telse:\n\t\tredirect(URL(r=request,f=\'home\'))\n    \treturn dict()\n\ndef approve_agent():\n\tb=db(db.company.mgr_id==auth.user.id).select()[0]\n\ta=db((db.works_for.company_id==b[\'id\'])).select()\n\tname=[]\n\tfin=[]\n\tfor i in range(0,len(a)):\n\t\tif a[i][\'approve\']==0:\n\t\t\tfin.append(a[i])\n\t\t\tc=db(db.auth_user.id==a[i][\'user_id\']).select()\n\t\t\tname.append(c[0])\n\treturn dict(a=fin,name=name)\n\ndef approve_agentconfirm():\n\tinp=request.args(0)\n\tdb(db.works_for.user_id==inp).update(approve=1)\n\tsession.msg="Agent Confirmation Done!"\n\tredirect(URL(\'index\'))\n\n#manager_home\ndef manager_home():\n\tif session.msg:\n\t\tresponse.flash=session.msg\n\t\tsession.msg=\'\'\n\ta=db(db.company.mgr_id==auth.user.id).select()\n\tif len(a)==0:\n\t\tredirect(URL(\'AddCompany\'))\n\t\n\treturn dict()\ndef AddCompany():\n\tresponse.flash=T("Add Company Details")\n\tdb.company.mgr_id.writable=False\n\tdb.company.mgr_id.readable=False\t\n\tform=SQLFORM.factory(db.company)\n\tif form.process().accepted:\n\t\ta=db.BuyInsurance._filter_fields(form.vars)\n\t\ta[\'mgr_id\']=auth.user.id\n\t\tdb.company.insert(**a)\n\t\tredirect(URL(\'index\'))\n\n\treturn dict(form=form)\n\ndef add_new_policy():\n\treturn dict()\n\ndef add_pol():\n\tinp=int(request.args(0))\n\tdb.Insurance.max_cover.requires=IS_INT_IN_RANGE(0,10000000)\n\tdb.Insurance.min_cover.requires=IS_INT_IN_RANGE(0,10000000)\n\tdb.Insurance.type_policy.readable=False\n\tdb.Insurance.type_policy.writable=False\n\tdb.Insurance.company_id.writable=False\n\tdb.Insurance.company_id.readable=False\n\tdb.Insurance.premium.readable=False\n\t\n\tdb.Insurance.heart.writable=False\n\tdb.Insurance.min_age.writable=False\n\tdb.Insurance.max_age.writable=False\n\tdb.Insurance.target_income.writable=False\n\tdb.Insurance.marital_status.writable=False\n\tdb.Insurance.cancer.writable=False\n\tdb.Insurance.tobbaco.writable=False\n\tdb.Insurance.critical.writable=False\n\tdb.Insurance.min_members.writable=False\n\tdb.Insurance.max_members.writable=False\n\tdb.Insurance.year_build.writable=False\n\tdb.Insurance.no_of_wheels.writable=False\n\tdb.Insurance.min_price.writable=False\n\tdb.Insurance.max_price.writable=False\n\tdb.Insurance.min_year.writable=False\n\tdb.Insurance.travel_type.writable=False\n\tdb.Insurance.premium.writable=False\n\tdb.Insurance.max_limit.writable=False\n\t\n\t\n\t\n\tdb.Insurance.heart.readable=False\n\tdb.Insurance.min_age.readable=False\n\tdb.Insurance.max_age.readable=False\n\tdb.Insurance.min_year.readable=False\n\tdb.Insurance.target_income.readable=False\n\tdb.Insurance.marital_status.readable=False\n\tdb.Insurance.cancer.readable=False\n\tdb.Insurance.tobbaco.readable=False\n\tdb.Insurance.critical.readable=False\n\tdb.Insurance.min_members.readable=False\n\tdb.Insurance.max_members.readable=False\n\tdb.Insurance.year_build.readable=False\n\tdb.Insurance.no_of_wheels.readable=False\n\tdb.Insurance.min_price.readable=False\n\tdb.Insurance.max_price.readable=False\n\tdb.Insurance.travel_type.readable=False\n\tdb.Insurance.max_limit.readable=False\n\t\n\tprint inp\t\n\tif inp==1:\n\t\t#term insurance\n\t\tprint \'enter\'\n\t\tdb.Insurance.min_age.writable=True\n\t\tdb.Insurance.max_age.writable=True\n\t\tdb.Insurance.target_income.writable=True\n\t\tdb.Insurance.marital_status.writable=True\n\t\tdb.Insurance.min_age.readable=True\n\t\tdb.Insurance.max_age.readable=True\n\t\tdb.Insurance.target_income.readable=True\n\t\tdb.Insurance.marital_status.readable=True\n\telif inp==2:\n\t\t#retirement plans\n\t\tdb.Insurance.min_duration.writable=False\n\t\tdb.Insurance.max_duration.writable=False\n\t\tdb.Insurance.min_duration.readable=False\n\t\tdb.Insurance.max_duration.readable=False\n\t\tdb.Insurance.min_age.writable=True\n\t\tdb.Insurance.max_age.writable=True\n\t\tdb.Insurance.target_income.writable=True\n\t\tdb.Insurance.marital_status.writable=True\n\t\tdb.Insurance.min_age.readable=True\n\t\tdb.Insurance.max_age.readable=True\n\t\tdb.Insurance.target_income.readable=True\n\t\tdb.Insurance.marital_status.readable=True\n\telif inp==3:\n\t\t#child plans\n\t\tdb.Insurance.target_income.writable=True\n\t\tdb.Insurance.target_income.readable=True\n\t\tdb.Insurance.max_age.writable=True\n\t\tdb.Insurance.max_age.readable=True\n\telif inp==4:\n\t\t#Health plan\n\t\tdb.Insurance.heart.writable=True\n\t\tdb.Insurance.min_age.writable=True\n\t\tdb.Insurance.max_age.writable=True\n\t\tdb.Insurance.target_income.writable=True\n\t\tdb.Insurance.marital_status.writable=True\n\t\tdb.Insurance.cancer.writable=True\n\t\tdb.Insurance.tobbaco.writable=True\n\t\tdb.Insurance.critical.writable=True\n\t\tdb.Insurance.heart.readable=True\n\t\tdb.Insurance.min_age.readable=True\n\t\tdb.Insurance.max_age.readable=True\n\t\tdb.Insurance.target_income.readable=True\n\t\tdb.Insurance.marital_status.readable=True\n\t\tdb.Insurance.cancer.readable=True\n\t\tdb.Insurance.tobbaco.readable=True\n\t\tdb.Insurance.critical.readable=True\n\telif inp==5:\n\t\t#senior\n\t\tdb.Insurance.heart.writable=True\n\t\tdb.Insurance.min_age.writable=True\n\t\tdb.Insurance.max_age.writable=True\n\t\tdb.Insurance.target_income.writable=True\n\t\tdb.Insurance.marital_status.writable=True\n\t\tdb.Insurance.cancer.writable=True\n\t\tdb.Insurance.tobbaco.writable=True\n\t\tdb.Insurance.critical.writable=True\n\t\tdb.Insurance.heart.readable=True\n\t\tdb.Insurance.min_age.readable=True\n\t\tdb.Insurance.max_age.readable=True\n\t\tdb.Insurance.target_income.readable=True\n\t\tdb.Insurance.marital_status.readable=True\n\t\tdb.Insurance.cancer.readable=True\n\t\tdb.Insurance.tobbaco.readable=True\n\t\tdb.Insurance.critical.readable=True\n\telif inp==6:\n\t\t#family plans\n\t\tdb.Insurance.min_members.writable=True\n\t\tdb.Insurance.max_members.writable=True\n\t\tdb.Insurance.min_members.readable=True\n\t\tdb.Insurance.max_members.readable=True\n\t\tdb.Insurance.target_income.writable=True\n\t\tdb.Insurance.target_income.readable=True\n\n\n\telif inp==7:\n\t\t#house\n\t\tdb.Insurance.target_income.writable=True\n\t\tdb.Insurance.target_income.readable=True\n\t\tdb.Insurance.year_build.writable=True\n\t\tdb.Insurance.year_build.readable=True\n\n\telif inp==8:\n\t\t#motor insuranace\n\t\tdb.Insurance.min_duration.writable=False\n\t\tdb.Insurance.max_duration.writable=False\n\t\tdb.Insurance.min_duration.readable=False\n\t\tdb.Insurance.max_duration.readable=False\n\t\tdb.Insurance.no_of_wheels.writable=True\n\t\tdb.Insurance.min_price.writable=True\n\t\tdb.Insurance.max_price.writable=True\n\t\tdb.Insurance.no_of_wheels.readable=True\n\t\tdb.Insurance.min_price.readable=True\n\t\tdb.Insurance.max_price.readable=True\n\t\tdb.Insurance.target_income.writable=True\n\t\tdb.Insurance.target_income.readable=True\n\n\telif inp==9:\n\t\t#travel plans\n\t\tdb.Insurance.travel_type.writable=True\n\t\tdb.Insurance.max_limit.writable=True\n\t\tdb.Insurance.target_income.writable=True\n\t\tdb.Insurance.marital_status.writable=True\n\t\tdb.Insurance.travel_type.readable=True\n\t\tdb.Insurance.max_limit.readable=True\n\t\tdb.Insurance.target_income.readable=True\n\t\tdb.Insurance.marital_status.readable=True\n\tform=SQLFORM.factory(db.Insurance)\n\tif form.process().accepted:\n\t\ta=db.Insurance._filter_fields(form.vars)\n\t\ta[\'type_policy\']=inp\n\t\tsel = db(db.company.mgr_id==auth.user.id).select()[0]\n\t\ta[\'company_id\']=sel[\'id\']\n\t\tdb.Insurance.insert(**a)\t\n\t\tredirect(URL(\'home\'))\n\treturn dict(form=form)\n\ndef register_agent():\n\tinp=request.args(0)\n\tprint inp\n\tdb.works_for.user_id.readable=False\n\tdb.works_for.approve.readable=False\n\tdb.works_for.approve.writable=False\n\tdb.works_for.user_id.writable=False\n\tform=SQLFORM.factory(db.works_for)\n\tif form.process().accepted:\n\t\ta=db.works_for._filter_fields(form.vars)\n\t\ta[\'user_id\']=inp\n\t\ta[\'approve\']=0\n\t\tdb.works_for.insert(**a)\t\n\t\tredirect(URL(\'index\'))\n\treturn dict(form=form)\n#verify the policies\ndef approve_confirmpolicy():\n\tinp=request.args(0)\n\tinp2=request.args(1)\n\tdb(db.BuyInsurance.id==inp).update(approve=True)\n\tdb.handles.insert(agent_id=auth.user.id,user_id=inp2,policy_id=inp)\n\tsession.msg="Policy Confirmation Done!"\n\tredirect(URL(\'index\'))\ndef view_pol():\n\ti=request.args(0)\n\ta=db(db.BuyInsurance.id==i).select()[0]\n\treturn dict(i=a)\ndef approve_policies():\n\ta=db(db.BuyInsurance.approve==False).select()\n\tname=[]\n\tfor i in range(0,len(a)):\n\t\tb=db(db.auth_user.id==a[i][\'user_id\']).select()[0]\n\t\tname.append(b)\n\tprint name\n\treturn dict(a=a,name=name)\n\n\n#agent_home\ndef agent_home():\n\tb=[]\n\ta=db(db.works_for.user_id==auth.user.id).select()\n\tif len(a)==0:\n\t\tredirect(URL(r=request , f=\'register_agent\' , args=auth.user.id))\n\telse:\n\t\tflag=1\n\t\tif session.msg:\n\t\t\tresponse.flash=T(session.msg)\n\t\t\tsession.msg=\'\'\n\t\tif a[0][\'approve\']==False:\n\t\t\tflag=1\n\t\telse:\n\t\t\tflag=0\n\t\n\treturn dict(flag=flag)\n#main_home\ndef home():\n\tb=[]\n\ta=[]\n\tif auth.user:\n\t\tif auth.user.r_type!=\'customer\':\n\t\t\tredirect(URL(\'index\'))\n\t\telse:\n\t\t\ta=db(db.BuyInsurance.user_id==auth.user.id and db.BuyInsurance.approve==True).select()\n\t\t\tb=db(db.BuyInsurance.user_id==auth.user.id and db.BuyInsurance.approve==False).select()\n\treturn dict(a=a,b=b)\n\ndef AddCompare():\n\tID=int(request.args(0))\n\tif len(session.compare)==0 or ID not in session.compare:\n\t\tsession.compare.append(ID)\n\tredirect(URL(\'ViewCompare\'))\ndef ViewCompare():\n\ta=[]\n\tfor i in range(len(session.compare)):\n\t\ta.append(db(db.Insurance.id==session.compare[i]).select()[0])\n\t\tprint  "Session Compare",session.compare[i]\n\tt=[]\n\tb=list(a)\n\tprint "b= ",b\n\ta=[]\n\tfor i in range(len(b)):\n\t\ta.append([])\n\td=[\'name\',\'policy_description\',\'min_age\',\'max_age\',\'min_cover\',\'max_cover\',\'min_members\',\'max_members\',\'min_duration\',\'max_duration\',\'no_of_wheels\',\'min_price\',\'max_price\',\'travel_type\',\'heart\',\'cancer\',\'critical\']\n\te=[\'Name\',\'Description\',\'Minimum Age\',\'Maximum Age\',\'Minimum Cover\',\'Maximum Cover\',\'Minimum Family Size\',\'Maximum Family Size\',\'Minimum Duration\',\'Maximum Duration\',\'Number of Wheels\',\'Minimum Price\',\'Maximum Price\',\'Travel Type\',\'Heart Patients\',\'Cancer Patients\',\'Critical Patients\']\n\tc=[]\n\tif len(b)!=0:\n\t\tfor k in range(len(d)):\n\t\t\tj=d[k]\n\t\t\tflag=False\n\t\t\tfor i in range(len(b)):\n\t\t\t\tif b[i][j]==\'\' or b[i][j]==\'None\' or b[i][j]==\'Not Applicable\' or b[i][j]==None:\n\t\t\t\t\tflag=flag\n\t\t\t\telse:\n\t\t\t\t\tflag=True\n\t\t\tif flag==True and j!=\'update_record\' and j!=\'id\' and j!= \'company_id\' and j!=\'delete_record\' and j!=\'type_policy\':\n\t\t\t \tfor i in range(len(b)):\n\t\t\t\t\tprint b[i][j]\n\t\t\t\t\tif b[i][j]==\'None\' or b[i][j]==None or b[i][j]==\'\':\n\t\t\t\t\t\ta[i].append(\'Not Applicable\')\n\t\t\t\t\telse:\n\t\t\t\t\t\ta[i].append(b[i][j])\n\t\t\t\tc.append(e[k])\n\treturn dict(b=a,c=c)\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    \n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\ndef life_policy_details():\n\treturn dict()\n\n\t\ndef term_policy():\n\n\tterm_policy=db(db.Insurance.type_policy==1).select()\n\n\treturn dict(t=term_policy)\n\ndef retirement_policy():\n\n\tretirement_policy=db(db.Insurance.type_policy==2).select()\n\n\treturn dict(t=retirement_policy)\n\ndef child_policy():\n\n\tchild_policy=db(db.Insurance.type_policy==3).select()\n\n\treturn dict(t=child_policy)\n\n\n\ndef health_policy_details():\n\treturn dict()\n\n\ndef health_policy():\n\n\thealth_policy=db(db.Insurance.type_policy==4).select()\n\n\treturn dict(t=health_policy)\n\t\ndef seniorhealth_policy():\n\n\tseniorhealth_policy=db(db.Insurance.type_policy==5).select()\n\n\treturn dict(t=seniorhealth_policy)\n\t\ndef family_policy():\n\n\tfamily_policy=db(db.Insurance.type_policy==6).select()\n\n\treturn dict(t=family_policy)\n\t\n\n\ndef other_policy_details():\n\treturn dict()\n\n\ndef home_policy():\n\n\thome_policy=db(db.Insurance.type_policy==7).select()\n\t\n\treturn dict(t=home_policy)\n\ndef motor_policy():\n\n\tmotor_policy=db(db.Insurance.type_policy==8).select()\n\t\n\treturn dict(t=motor_policy)\n\ndef travel_policy():\n\n\ttravel_policy=db(db.Insurance.type_policy==9).select()\n\t\n\treturn dict(t=travel_policy)\n@auth.requires_login()\ndef buy_policy():\n\trID=int(request.args(0))\n\tID=int(request.args(1))\n\tsel=db(db.Insurance.id==ID).select()[0]\n\tID=rID\n\tdb.BuyInsurance.cover.requires=IS_INT_IN_RANGE(sel[\'min_cover\'],sel[\'max_cover\'])\n\tdb.BuyInsurance.duration.requires=IS_INT_IN_RANGE(sel[\'min_duration\'],sel[\'max_duration\'])\n\tdb.BuyInsurance.age.requires=IS_INT_IN_RANGE(sel[\'min_age\'],sel[\'max_age\'])\n\tdb.BuyInsurance.premium.requires=IS_INT_IN_RANGE(10,10000)\n\tdb.BuyInsurance.company_id.writable=False\n\tdb.BuyInsurance.user_id.writable=False\n\tdb.BuyInsurance.type_policy.writable=False\n\tdb.BuyInsurance.name.writable=False\n\tdb.BuyInsurance.logo.writable=False\n\tdb.BuyInsurance.policy_description.writable=False\n\tdb.BuyInsurance.extra_benefits.writable=False\n\tdb.BuyInsurance.heart.writable=False\n\tdb.BuyInsurance.cancer.writable=False\n\tdb.BuyInsurance.tobbaco.writable=False\n\tdb.BuyInsurance.critical.writable=False\n\tdb.BuyInsurance.members.writable=False\n\tdb.BuyInsurance.year_build.writable=False\n\tdb.BuyInsurance.no_of_wheels.writable=False\n\tdb.BuyInsurance.approve.writable=False\n\tdb.BuyInsurance.price.writable=False\n\tdb.BuyInsurance.travel_type.writable=False\n\t\n\tdb.BuyInsurance.company_id.readable=False\n\tdb.BuyInsurance.approve.readable=False\n\tdb.BuyInsurance.user_id.readable=False\n\tdb.BuyInsurance.type_policy.readable=False\n\tdb.BuyInsurance.name.readable=False\n\tdb.BuyInsurance.logo.readable=False\n\tdb.BuyInsurance.policy_description.readable=False\n\tdb.BuyInsurance.extra_benefits.readable=False\n\tdb.BuyInsurance.heart.readable=False\n\tdb.BuyInsurance.cancer.readable=False\n\tdb.BuyInsurance.tobbaco.readable=False\n\tdb.BuyInsurance.critical.readable=False\n\tdb.BuyInsurance.members.readable=False\n\tdb.BuyInsurance.year_build.readable=False\n\tdb.BuyInsurance.no_of_wheels.readable=False\n\tdb.BuyInsurance.price.readable=False\n\tdb.BuyInsurance.travel_type.readable=False\t\n\tif ID==1 or ID==2 or ID==3:\n\t\ta=1\n\n\t\t\n\telif ID==4 or ID==5:\n\t\tdb.BuyInsurance.heart.readable=True\n\t\tdb.BuyInsurance.cancer.readable=True\n\t\tdb.BuyInsurance.tobbaco.readable=True\n\t\tdb.BuyInsurance.critical.readable=True\n\t\t\n\t\tdb.BuyInsurance.heart.writable=True\n\t\tdb.BuyInsurance.cancer.writable=True\n\t\tdb.BuyInsurance.tobbaco.writable=True\n\t\tdb.BuyInsurance.critical.writable=True\n\t\t\n\telif ID==6:\n\t\t\n\t\tdb.BuyInsurance.members.readable=True\n\t\tdb.BuyInsurance.members.writable=True\n\n\telif ID==7:\n\t\t\n\t\tdb.BuyInsurance.year_build.readable=True\n\t\tdb.BuyInsurance.year_build.writable=True\n\n\telif ID==8:\n\t\t\n\t\tdb.BuyInsurance.no_of_wheels.readable=True\n\t\tdb.BuyInsurance.price.readable=True\n\t\tdb.BuyInsurance.no_of_wheels.writable=True\n\t\tdb.BuyInsurance.price.writable=True\n\n\telif ID==9:\n\t\n\t\tdb.BuyInsurance.travel_type.writable=True\n\t\tdb.BuyInsurance.travel_type.readable=True\n\t\tdb.BuyInsurance.duration.label=\'Travel Duration\'\n\tform=SQLFORM.factory(db.BuyInsurance)\n\tif form.process().accepted:\n\t\ta=db.BuyInsurance._filter_fields(form.vars)\n\t\ta[\'user_id\']=auth.user.id\n\t\ta[\'type_policy\']=sel[\'type_policy\']\n\t\ta[\'company_id\']=sel[\'company_id\']\n\t\ta[\'name\']=sel[\'name\']\n\t\ta[\'logo\']=sel[\'logo\']\n\t\ta[\'policy_description\']=sel[\'policy_description\']\n\t\tprint a\n\t\tdb.BuyInsurance.insert(**a)\t\n\t\tsession.msg="You have successfully booked the policy"\n\t\tredirect(URL(\'home\'))\n\n\treturn dict(form=form)\ndef FilterPolicy():\n\ta=[]\n\tp=db(db.company.id>0).select()\n\tfor i in range(len(p)):\n\t\ta.append(p[i][\'name\'])\n\ta.append(\'All\')\n\tform=SQLFORM.factory(\'Filter Policies\',\n\t\t\tField(\'Type\',requires=IS_IN_SET((\'Term Insurance\',\'Retirement Plan\',\'Child Plan\',\'Health Insurance\',\'Senior Citizen\',\'Family Medicalim Insurance\',\'Home Insurance\',\'Automobile Insurance\',\'Travel Insurance\',\'All\')),default=\'All\'),\n\t\t\tField(\'Duration\',\'integer\'),\n\t\t\tField(\'Company\',\'string\',requires=IS_IN_SET(a),default=\'All\'),\n\t\t\tField(\'Age\',\'integer\'),\n\t\t\tField(\'Cover\',\'integer\'),\n\t\t\tField(\'Income\',\'integer\',requires=IS_IN_SET((\'upto 3 lakhs\',\'3-5 lakhs\',\'5-10 lakhs\',\'10+ lakhs\',\'Any\')),default=\'Any\'))\n\tif form.process().accepted:\n\t\tprint form.vars\n\t\t\n\t\tredirect(URL(r=request,f=\'ViewFilter\',args=(form.vars.Type,form.vars.Duration,form.vars.Company,form.vars.Age,form.vars.Cover,form.vars.Income)))\n\treturn dict(form=form)\ndef ViewFilter():\n\ta=[]\n\ta.append(request.args(0))\n\ta.append(request.args(1))\n\ta.append(request.args(2))\n\ta.append(request.args(3))\n\ta.append(request.args(4))\n\ta.append(request.args(5))\n\tTYPE=0\n\ta[2]=a[2].replace("_"," ")\n\tif a[0]==\'Term_Insurance\':\n\t\tTYPE=1\t\n\telif a[0]==\'Retirement_Plan\':\n\t\tTYPE=2\n\telif a[0]==\'Child_Plan\':\n\t\tTYPE=3\n\telif a[0]==\'Health_Insurance\':\n\t\tTYPE=4\n\telif a[0]==\'Senior_Citizen\':\n\t\tTYPE=5\n\telif a[0]==\'Family_Medicalim_Insurance\':\n\t\tTYPE=6\n\telif a[0]==\'Home_Insurance\':\n\t\tTYPE=7\n\telif a[0]==\'Automobile_Insurance\':\n\t\tTYPE=8\n\telif a[0]==\'Travel_Insurance\':\n\t\tTYPE=9\n\tprint a ,"Type Of Policy = ", TYPE\n\tif TYPE!=0:\n\t\tsel=db(db.Insurance.type_policy==TYPE).select()\n\t\tb=sel\n\t\tc=[]\n\t\tprint sel\n\telse :\n\t\tsel=db(db.Insurance.id>0).select()\n\t\tb=sel\n\t\tc=[]\n\t\tprint sel\n\tif a[1]==\'None\':\n\t\tb=b\t\n\telse:\n\t\tsel=db(db.Insurance.min_duration<=int(a[1]) and db.Insurance.max_duration>=int(a[1]))\n\t\tfor i in sel:\n\t\t\tif( i in b):\n\t\t\t\tc.append(i)\n\t\tb=c\n\t\tc=[]\n\tprint b , "A[1]"\n\tif a[2]==\'All\':\n\t   \tb=b\n\telse:\n\t   \tsel=db(db.company.name==a[2]).select()[0]\n\t   \tsel=db(db.Insurance.company_id==int(sel[\'id\'])).select()\n\t   \tfor i in sel:\n\t\t\tif( i in b):\n\t\t\t\tc.append(i)\n\t\tb=c\n\t\tc=[]\n\tprint b , "A[2]"\n\tif a[3]==\'None\':\n\t   \tb=b\n\telse:\n\t   \tsel=db(db.Insurance.min_age<=int(a[3]) and db.Insurance.max_age>=int(a[3])).select()\n\t\tfor i in sel:\n\t\t\tif( i in b):\n\t\t\t\tc.append(i)\n\t\tb=c\n\t\tc=[]\n\tprint b , "A[3]",a[3]\n\tif a[4]==\'None\':\n\t   \tb=b\n\telse:\n\t   \tsel=db(db.Insurance.min_cover<=int(a[4]) and db.Insurance.max_cover>=int(a[4])).select()\n\t\tfor i in sel:\n\t\t\tif( i in b):\n\t\t\t\tc.append(i)\n\t\tb=c\n\t\tc=[]\n\tif a[5]==\'Any\':\n\t   \tb=b\n\telse:\n\t   \ta[5].replace("_"," ")\n\t   \tsel=db(db.Insurance.target_income==a[5]).select()\n\t\tfor i in sel:\n\t\t\tif( i in b):\n\t\t\t\tc.append(i)\n\t\tb=c\n\t\tc=[]\n\ta=[]\n\tc=[]\n\tb=list(b)\n\treturn dict(b=b)\n\nresponse._vars=response._caller(FilterPolicy)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/samfisher/iiith/Semester 2/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/samfisher/iiith/Semester 2/web2py/applications/Project/controllers/default.py", line 677, in <module>\n  File "/home/samfisher/iiith/Semester 2/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/samfisher/iiith/Semester 2/web2py/applications/Project/controllers/default.py", line 577, in FilterPolicy\n    Field(\'Income\',\'integer\',requires=IS_IN_SET((\'upto 3 lakhs\',\'3-5 lakhs\',\'5-10 lakhs\',\'10+ lakhs\',\'Any\')),default=\'Any\'))\n  File "/home/samfisher/iiith/Semester 2/web2py/gluon/sqlhtml.py", line 1587, in factory\n    return SQLFORM(DAL(None).define_table(table_name, *fields),\n  File "/home/samfisher/iiith/Semester 2/web2py/gluon/dal.py", line 7651, in define_table\n    table = self.lazy_define_table(tablename,*fields,**args)\n  File "/home/samfisher/iiith/Semester 2/web2py/gluon/dal.py", line 7668, in lazy_define_table\n    table = table_class(self, tablename, *fields, **args)\n  File "/home/samfisher/iiith/Semester 2/web2py/gluon/dal.py", line 8098, in __init__\n    \'define_table argument is not a Field or Table: %s\' % field)\nSyntaxError: define_table argument is not a Field or Table: Filter Policies\n'
p11
s.